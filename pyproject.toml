[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "django-deepface"
version = "0.0.3"
description = "Django app for face recognition authentication using DeepFace"
readme = "README.md"
requires-python = ">=3.8,<3.12"
license = {text = "MIT"}
authors = [
    {name = "Russ Ferriday", email = "russ.ferriday@gmail.com"},
]
keywords = ["django", "deepface", "face-recognition", "authentication", "biometric"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.2",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "Django>=4.2,<5.3",
    "deepface>=0.0.79",
    "pgvector>=0.2.4",
    "Pillow>=10.0.0",
    "numpy>=1.24.0",
    "dj-database-url>=2.3.0",
    "psycopg2-binary>=2.9.10",
    "tf-keras>=2.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-django>=4.5",
    "pytest-cov>=4.0",
    "ruff>=0.3.0",
    "django-stubs>=1.12",
    "pre-commit>=2.20",
]

[project.urls]
Homepage = "https://github.com/topiaruss/django-deepface"
Documentation = "https://django-deepface.readthedocs.io"
Repository = "https://github.com/topiaruss/django-deepface"
Issues = "https://github.com/topiaruss/django-deepface/issues"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "django_deepface.tests.settings"
python_files = ["test_*.py", "*_test.py"]
testpaths = ["django_deepface/tests"]

[tool.coverage.run]
source = ["django_deepface"]
omit = [
    "*/migrations/*",
    "django_deepface/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.ruff]
line-length = 88
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "django_deepface/migrations/",
]
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "PL",  # pylint
    "RUF", # ruff-specific rules
    "DJ",  # django-specific rules
]
ignore = [
    "E501",  # Line too long - handled by formatter
    "PLR2004",  # Use of assert in tests
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["django_deepface"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.bandit]
exclude = ["django_deepface/tests/"]
skips = [
    "B101",  # Skip assert warnings
    "B105",  # Skip hardcoded password warnings
]

[tool.django-stubs]
django_settings_module = "django_deepface.tests.settings"
strict_settings = true
