[tool.uv]
dev-dependencies = [
    "pytest>=7.0",
    "pytest-django>=4.5",
    "pytest-cov>=4.0",
    "pytest-fixturecheck>=0.6.0",
    "ruff>=0.11.0",
    "django-stubs>=5.0.0",
    "pre-commit>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-deepface"
version = "0.0.6"
description = "Django app for face recognition authentication using DeepFace"
readme = "README.md"
requires-python = ">=3.9,<3.13"
license = {text = "MIT"}
authors = [
    {name = "Russ Ferriday", email = "russ.ferriday@gmail.com"},
]
keywords = ["django", "deepface", "face-recognition", "authentication", "biometric"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

dependencies = [
    "Django>=4.2,<5.2",
    "deepface>=0.0.79",
    "pgvector>=0.2.4",
    "Pillow>=10.0.0",
    "numpy>=1.24.0",
    "dj-database-url>=2.3.0",
    "psycopg[binary]>=3.1.0",
    "tf-keras>=2.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-django>=4.5",
    "pytest-cov>=4.0",
    "ruff>=0.6.0",
    "django-stubs>=5.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/topiaruss/django-deepface"
Repository = "https://github.com/topiaruss/django-deepface"
Issues = "https://github.com/topiaruss/django-deepface/issues"

# Testing Configuration
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "django_deepface.tests.settings"
python_files = ["test_*.py"]
testpaths = ["django_deepface/tests"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=django_deepface",
    "--cov-report=term-missing",
    "--cov-report=html",
]

# Coverage Configuration
[tool.coverage.run]
source = ["django_deepface"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/__init__.py",
    "django_deepface/management/commands/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

# Ruff Configuration
[tool.ruff]
line-length = 88
target-version = "py39"
exclude = [
    "migrations",
    "django_deepface/migrations",
]

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "DJ", "RUF"]
ignore = ["E501", "RUF012"]  # Ignore line too long and mutable class attributes

[tool.ruff.lint.isort]
known-first-party = ["django_deepface"]

# Hatch Configuration
[tool.hatch.build.targets.wheel]
packages = ["django_deepface"]

[tool.hatch.build.targets.sdist]
include = [
    "/django_deepface",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
]
